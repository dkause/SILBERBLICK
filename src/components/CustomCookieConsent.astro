---
// CustomCookieConsent.astro - Minimal Cookie-Consent ohne External Dependencies
// Ersetzt Cookiebot für bessere Performance und Kontrolle

const isProduction = import.meta.env.PROD;
---

{isProduction && (
  <div id="cookie-consent-banner" class="cookie-consent-banner hidden">
    <div class="cookie-consent-content u-container">
      <div class="cookie-consent-text">
        <h3 class="font-sans u-step-01">Analyse-Cookies</h3>
        <p class="u-step-02">Wir nutzen Google Analytics und Hotjar zur Verbesserung unserer Website. Ihre Daten werden anonymisiert verarbeitet.</p>
      </div>
      <div class="cookie-consent-actions">
        <button id="cookie-accept" class="button-base cookie-btn-accept">Akzeptieren</button>
        <button id="cookie-decline" class="button-base cookie-btn-decline">Ablehnen</button>
      </div>
    </div>
  </div>
)}

<script>
  // Cookie-Consent Management
  class CookieConsent {
    constructor() {
      this.consentKey = 'silberblick-consent';
      this.init();
    }

    init() {
      // Nur in Production ausführen
      if (!document.getElementById('cookie-consent-banner')) return;
      
      const consent = this.getConsent();
      
      if (consent === null) {
        // Noch keine Entscheidung getroffen
        this.showBanner();
      } else {
        // Consent bereits vorhanden - Analytics laden
        this.loadAnalytics(consent.analytics);
      }
      
      this.bindEvents();
    }

    getConsent() {
      try {
        const stored = localStorage.getItem(this.consentKey);
        return stored ? JSON.parse(stored) : null;
      } catch (e) {
        return null;
      }
    }

    setConsent(analytics) {
      const consent = {
        analytics: analytics,
        timestamp: new Date().toISOString()
      };
      
      localStorage.setItem(this.consentKey, JSON.stringify(consent));
      return consent;
    }

    showBanner() {
      const banner = document.getElementById('cookie-consent-banner');
      if (banner) {
        banner.classList.remove('hidden');
      }
    }

    hideBanner() {
      const banner = document.getElementById('cookie-consent-banner');
      if (banner) {
        banner.classList.add('hidden');
      }
    }

    bindEvents() {
      const acceptBtn = document.getElementById('cookie-accept');
      const declineBtn = document.getElementById('cookie-decline');

      acceptBtn?.addEventListener('click', () => {
        this.setConsent(true);
        this.loadAnalytics(true);
        this.hideBanner();
      });

      declineBtn?.addEventListener('click', () => {
        this.setConsent(false);
        this.hideBanner();
      });
    }

    loadAnalytics(enabled) {
      if (!enabled) return;

      // Google Analytics laden
      this.loadGA4();
      // Hotjar laden
      this.loadHotjar();
    }

    loadGA4() {
      // GA4 Script laden
      const script1 = document.createElement('script');
      script1.async = true;
      script1.src = 'https://www.googletagmanager.com/gtag/js?id=G-WJK34XRR7F';
      document.head.appendChild(script1);

      // GA4 Config
      const script2 = document.createElement('script');
      script2.innerHTML = `
        window.dataLayer = window.dataLayer || [];
        function gtag(){dataLayer.push(arguments);}
        gtag('js', new Date());
        gtag('config', 'G-WJK34XRR7F', {
          page_title: document.title,
          page_location: window.location.href
        });
      `;
      document.head.appendChild(script2);
    }

    loadHotjar() {
      const script = document.createElement('script');
      script.innerHTML = `
        (function(h,o,t,j,a,r){
          h.hj=h.hj||function(){(h.hj.q=h.hj.q||[]).push(arguments)};
          h._hjSettings={hjid:3519944,hjsv:6};
          a=o.getElementsByTagName('head')[0];
          r=o.createElement('script');r.async=1;
          r.src=t+h._hjSettings.hjid+j+h._hjSettings.hjsv;
          a.appendChild(r);
        })(window,document,'https://static.hotjar.com/c/hotjar-','.js?sv=');
      `;
      document.head.appendChild(script);
    }

    // Public API für Datenschutz-Seite
    static revokeConsent() {
      localStorage.removeItem('silberblick-consent');
      window.location.reload();
    }

    static getConsentStatus() {
      try {
        const stored = localStorage.getItem('silberblick-consent');
        return stored ? JSON.parse(stored) : null;
      } catch (e) {
        return null;
      }
    }
  }

  // Expose global functions
  window.CookieConsent = CookieConsent;

  // Initialize on DOM ready
  if (document.readyState === 'loading') {
    document.addEventListener('DOMContentLoaded', () => new CookieConsent());
  } else {
    new CookieConsent();
  }
</script>

<style>
  .cookie-consent-banner {
    position: fixed;
    bottom: 0;
    left: 0;
    right: 0;
    background: rgba(0, 0, 0, 0.95);
    color: white;
    padding: var(--s1);
    z-index: 1000;
    box-shadow: 0 -2px 10px rgba(0, 0, 0, 0.3);
  }

  .cookie-consent-content {
    display: flex;
    align-items: center;
    justify-content: space-between;
    gap: var(--s1);
  }

  .cookie-consent-text p {
    opacity: 0.9;
    line-height: 1.4;
  }

  .cookie-consent-actions {
    display: flex;
    gap: var(--s0);
    flex-shrink: 0;
  }

  .cookie-btn-accept {
    background: white;
    color: black;
  }

  .cookie-btn-accept:hover {
    background: #f0f0f0;
  }

  .cookie-btn-decline {
    background: transparent;
    color: white;
    border: 1px solid rgba(255, 255, 255, 0.3);
  }

  .cookie-btn-decline:hover {
    border-color: rgba(255, 255, 255, 0.6);
  }

  /* Mobile Responsive */
  @media (max-width: 768px) {
    .cookie-consent-content {
      flex-direction: column;
      text-align: center;
      gap: var(--s1);
    }

    .cookie-consent-actions {
      justify-content: center;
      width: 100%;
    }

    .cookie-btn {
      flex: 1;
      max-width: 150px;
    }
  }
</style>